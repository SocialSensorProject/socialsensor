%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/avgMI_gray.eps
%%Creator: gnuplot 5.2 patchlevel 4
%%CreationDate: Sat Jan  5 06:28:23 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 251
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 251 lineto 50 251 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plots/avgMI_gray.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 4)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jan  5 06:28:23 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Courier) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 4032.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 1 ] def
/RedA [1 .498 ] def
/GreenA [1 .4196 ] def
/BlueA [1 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1092 1775 M
63 0 V
5792 0 R
-63 0 V
stroke
1008 1775 M
[ [(Courier-Bold) 170.0 0.0 true true 0 (Term)]
] -56.7 MRshow
/Courier findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
1092 2245 M
63 0 V
5792 0 R
-63 0 V
stroke
1008 2245 M
[ [(Courier-Bold) 170.0 0.0 true true 0 (Location)]
] -56.7 MRshow
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1092 2716 M
63 0 V
5792 0 R
-63 0 V
stroke
1008 2716 M
[ [(Courier-Bold) 170.0 0.0 true true 0 (From)]
] -56.7 MRshow
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1092 3186 M
63 0 V
5792 0 R
-63 0 V
stroke
1008 3186 M
[ [(Courier-Bold) 170.0 0.0 true true 0 (Hashtag)]
] -56.7 MRshow
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1092 3656 M
63 0 V
5792 0 R
-63 0 V
stroke
1008 3656 M
[ [(Courier-Bold) 170.0 0.0 true true 0 (Mention)]
] -56.7 MRshow
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1358 1540 M
0 63 V
stroke
1358 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Tennis)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1890 1540 M
0 63 V
stroke
1890 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Space)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2423 1540 M
0 63 V
stroke
2423 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Soccer)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2955 1540 M
0 63 V
stroke
2955 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Iran Deal)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3487 1540 M
0 63 V
stroke
3487 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Human Disaster)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4020 1540 M
0 63 V
stroke
4020 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Celebrity Death)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4552 1540 M
0 63 V
stroke
4552 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Social Issues)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5084 1540 M
0 63 V
stroke
5084 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Natural Disaster)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5616 1540 M
0 63 V
stroke
5616 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Epidemics)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6149 1540 M
0 63 V
stroke
6149 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (LGBT)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6681 1540 M
0 63 V
stroke
6681 1456 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier-Bold) 170.0 0.0 true true 0 (Mean)]
] -56.7 MLshow
grestore
/Courier findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1092 3891 N
0 -2351 V
5855 0 V
0 2351 V
-5855 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
6296 3758 M
('data/matrix.txt' using  1:2:3 matrix) Rshow
1.000 UL
LTb
0.58 0.00 0.83 C %%%%BeginImage
gsave 1092 3891 N 1092 1540 L 6947 1540 L 6947 3891 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  1092 3891 M
  5855 0 V
  0 -2351 V
  -5855 0 V
  1092 3891 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 71 string def
  currentfile imagebuf readstring
} {
gsave
1092 3891 translate
5855 -2351 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   ffffff fefeff fefeff fdfdff fdfdff fcfcff fcfcff fbfbff
   fbfaff fafaff faf9ff f9f9ff f9f8ff f8f7ff f8f7ff f7f6ff
   f7f6ff f6f5ff f6f5ff f5f4ff f5f3ff f4f3ff f4f2ff f3f2ff
   f3f1ff f2f0ff f2f0ff f1efff f1efff f0eeff f0eeff efedff
   efecff eeecff eeebff edebff edeaff eceaff ece9ff ebe8ff
   ebe8ff eae7ff eae7ff e9e6ff e9e5ff e8e5ff e8e4ff e7e4ff
   e7e3ff e6e3ff e6e2ff e5e1ff e5e1ff e4e0ff e4e0ff e3dfff
   e3deff e2deff e2ddff e1ddff e1dcff e0dcff e0dbff dfdaff
   dfdaff ded9ff ded9ff ddd8ff ddd8ff dcd7ff dcd6ff dbd6ff
   dbd5ff dad5ff dad4ff d9d3ff d9d3ff d8d2ff d8d2ff d7d1ff
   d7d1ff d6d0ff d6cfff d5cfff d5ceff d4ceff d4cdff d3cdff
   d3ccff d2cbff d2cbff d1caff d1caff d0c9ff d0c8ff cfc8ff
   cfc7ff cec7ff cec6ff cdc6ff cdc5ff ccc4ff ccc4ff cbc3ff
   cbc3ff cac2ff cac1ff c9c1ff c9c0ff c8c0ff c8bfff c7bfff
   c7beff c6bdff c6bdff c5bcff c5bcff c4bbff c4bbff c3baff
   c3b9ff c2b9ff c2b8ff c1b8ff c1b7ff c0b6ff c0b6ff bfb5ff
   bfb5ff beb4ff beb4ff bdb3ff bdb2ff bcb2ff bcb1ff bbb1ff
   bbb0ff baafff baafff b9aeff b9aeff b8adff b8adff b7acff
   b7abff b6abff b6aaff b5aaff b5a9ff b4a9ff b4a8ff b3a7ff
   b3a7ff b2a6ff b2a6ff b1a5ff b1a4ff b0a4ff b0a3ff afa3ff
   afa2ff aea2ff aea1ff ada0ff ada0ff ac9fff ac9fff ab9eff
   ab9dff aa9dff aa9cff a99cff a99bff a89bff a89aff a799ff
   a799ff a698ff a698ff a597ff a597ff a496ff a495ff a395ff
   a394ff a294ff a293ff a192ff a192ff a091ff a091ff 9f90ff
   9f90ff 9e8fff 9e8eff 9d8eff 9d8dff 9c8dff 9c8cff 9b8cff
   9b8bff 9a8aff 9a8aff 9989ff 9989ff 9888ff 9887ff 9787ff
   9786ff 9686ff 9685ff 9585ff 9584ff 9483ff 9483ff 9382ff
   9382ff 9281ff 9280ff 9180ff 917fff 907fff 907eff 8f7eff
   8f7dff 8e7cff 8e7cff 8d7bff 8d7bff 8c7aff 8c7aff 8b79ff
   8b78ff 8a78ff 8a77ff 8977ff 8976ff 8875ff 8875ff 8774ff
   8774ff 8673ff 8673ff 8572ff 8571ff 8471ff 8470ff 8370ff
   836fff 826eff 826eff 816dff 816dff 806cff 806cff 7f6bff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 11
  /Height 5
  /BitsPerComponent 8
  /ImageMatrix [ 11 0 0 5 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
"V!'c,m>"c%4`)*>Pnl1/4gOe\mYRB%fck8!s&ZC"on`3!!`N,!<`l8%NU3+I2b-U.8Mc~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
% End plot #1
% Begin plot #2
1.000 UL
LTb
LCb setrgbcolor
1.000 UP
LCb setrgbcolor
1358 1775 M
[ [(Courier) 140.0 0.0 true true 0 (1.51)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1890 1775 M
[ [(Courier) 140.0 0.0 true true 0 (3.04)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2423 1775 M
[ [(Courier) 140.0 0.0 true true 0 (13.5)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2955 1775 M
[ [(Courier) 140.0 0.0 true true 0 (0.58)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
3487 1775 M
[ [(Courier) 140.0 0.0 true true 0 (12.79)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4020 1775 M
[ [(Courier) 140.0 0.0 true true 0 (2.78)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4552 1775 M
[ [(Courier) 140.0 0.0 true true 0 (5.7)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5084 1775 M
[ [(Courier) 140.0 0.0 true true 0 (1.51)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5616 1775 M
[ [(Courier) 140.0 0.0 true true 0 (4.21)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6149 1775 M
[ [(Courier) 140.0 0.0 true true 0 (8.11)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6681 1775 M
[ [(Courier) 140.0 0.0 true true 0 (5.37)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1358 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1890 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2423 2245 M
[ [(Courier) 140.0 0.0 true true 0 (1.01)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2955 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.03)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
3487 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.77)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4020 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.11)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4552 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.38)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5084 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.12)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5616 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.46)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6149 2245 M
[ [(Courier) 140.0 0.0 true true 0 (1.5)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6681 2245 M
[ [(Courier) 140.0 0.0 true true 0 (0.49)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1358 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1890 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.55)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2423 2716 M
[ [(Courier) 140.0 0.0 true true 0 (1.6)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2955 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.07)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
3487 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.91)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4020 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.07)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4552 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5084 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.11)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5616 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.83)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6149 2716 M
[ [(Courier) 140.0 0.0 true true 0 (2.29)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6681 2716 M
[ [(Courier) 140.0 0.0 true true 0 (0.69)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1358 3186 M
[ [(Courier) 140.0 0.0 true true 0 (2)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1890 3186 M
[ [(Courier) 140.0 0.0 true true 0 (9.34)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2423 3186 M
[ [(Courier) 140.0 0.0 true true 0 (25.65)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2955 3186 M
[ [(Courier) 140.0 0.0 true true 0 (1.15)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
3487 3186 M
[ [(Courier) 140.0 0.0 true true 0 (17.5)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4020 3186 M
[ [(Courier) 140.0 0.0 true true 0 (4.49)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4552 3186 M
[ [(Courier) 140.0 0.0 true true 0 (7.51)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5084 3186 M
[ [(Courier) 140.0 0.0 true true 0 (2.08)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5616 3186 M
[ [(Courier) 140.0 0.0 true true 0 (10.27)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6149 3186 M
[ [(Courier) 140.0 0.0 true true 0 (18.98)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6681 3186 M
[ [(Courier) 140.0 0.0 true true 0 (9.9)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1358 3656 M
[ [(Courier) 140.0 0.0 true true 0 (0.53)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
1890 3656 M
[ [(Courier) 140.0 0.0 true true 0 (1.33)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2423 3656 M
[ [(Courier) 140.0 0.0 true true 0 (4.68)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
2955 3656 M
[ [(Courier) 140.0 0.0 true true 0 (0.22)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
3487 3656 M
[ [(Courier) 140.0 0.0 true true 0 (3.8)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4020 3656 M
[ [(Courier) 140.0 0.0 true true 0 (0.52)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
4552 3656 M
[ [(Courier) 140.0 0.0 true true 0 (2.21)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5084 3656 M
[ [(Courier) 140.0 0.0 true true 0 (0.31)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
5616 3656 M
[ [(Courier) 140.0 0.0 true true 0 (1.4)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6149 3656 M
[ [(Courier) 140.0 0.0 true true 0 (4.39)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
LCb setrgbcolor
6681 3656 M
[ [(Courier) 140.0 0.0 true true 0 (1.94)]
] -46.7 MCshow
/Courier findfont 140 scalefont setfont
% End plot #2
% Begin plot #3
2.000 UL
LTb
0.00 0.00 0.00 C 6415 1540 M
0 26 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 52 V
0 52 V
0 53 V
0 52 V
0 26 V
% End plot #3
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1092 3891 N
0 -2351 V
5855 0 V
0 2351 V
-5855 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Page: 2 2
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Courier) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Courier-Bold Courier
